#
# https://wiki.hyprland.org/Configuring/Environment-variables #
#

env = GDK_SCALE,1
env = GDK_DPI_SCALE,1
env = XCURSOR_SIZE,24
env = XDG_USE_PORTAL=1

#
# User Environment Variables
#

env = WALLPAPER_PATH,$HOME/.local/wallpapers
env = SCREENSHOT_PATH,$HOME/Pictures/Screenshots

#
# Hyprland Environment Variables
#


# Enables more verbose logging of wlroots.
#env = HYPRLAND_LOG_WLR,1

# Disables realtime priority setting by Hyprland.
#env = HYPRLAND_NO_RT,1

# If systemd, disables the sd_notify calls.
#env = HYPRLAND_NO_SD_NOTIFY,1


#
# Toolkit Backend Variables
#


# GTK: Use wayland if available, fall back to x11 if not.
env = GDK_BACKEND,wayland,x11 

# Qt: Use wayland if available, fall back to x11 if not.
env = QT_QPA_PLATFORM,"wayland;xcb"

# Run SDL2 applications on Wayland. Remove or set to x11 if games that provide older versions of SDL cause compatibility issues
env = SDL_VIDEODRIVER,wayland

# Clutter package already has wayland enabled, this variable will force Clutter applications to try and use the Wayland backend
env = CLUTTER_BACKEND,wayland


#
# XDG Specifications
# 


env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland


#
# Qt Variables
#


# (From the Qt documentation) enables automatic scaling, based on the monitor’s pixel density
env = QT_AUTO_SCREEN_SCALE_FACTOR,1

# Tell Qt applications to use the Wayland backend, and fall back to x11 if Wayland is unavailable
env = QT_QPA_PLATFORM,wayland;xcb

# Disables window decorations on Qt applications
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1

# Tells Qt based applications to pick your theme from qt5ct, use with Kvantum.
env = QT_QPA_PLATFORMTHEME,qt5ct


#
# NVIDIA Specific
#


# If card1 isn’t available for whatever reason, use card0. So if the AMD GPU isn’t available, use NVIDIA
env = WLR_DRM_DEVICES,/dev/dri/renderD128:/dev/dri/card0
# env = WLR_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0

# Force GBM as a backend
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia

# Hardware acceleration on NVIDIA GPUs
env = LIBVA_DRIVER_NAME,nvidia

# Controls if G-Sync capable monitors should use Variable Refresh Rate (VRR)
env = __GL_GSYNC_ALLOWED,1

# Controls if Adaptive Sync should be used. Recommended to set as “0” to avoid having problems on some games.
env = __GL_VRR_ALLOWED,1

env = WLR_NO_HARDWARE_CURSORS,1

# use legacy DRM interface instead of atomic mode setting. Might fix flickering issues.
env = WLR_DRM_NO_ATOMIC,1
