#!/usr/bin/env bash

set -Eeuo pipefail
trap 's=$?; echo >&2 "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR


function print_usage {
    scriptname=$(basename "$0")

    printf '%s\n' "Usage: ${scriptname} <action> <menu> <dotool>"
    printf '\n'
    printf '%s\n' 'Arguments:'
    printf '%s\n' "    action:        Can be 'show' or 'otp'. Will process password or otp accordingly."
    printf '%s\n' '    menu:          Path to program executable with arguments that accepts stdin and displays a list of options to choose from. e.g.: dmenu, rofi, wofi, etc.'
    printf '%s\n\n' '    dotool:        Path to program executable with arguments that accepts stdin and prints it. e.g.: xdotool, ydotool, etc.'
}


if [ $# -eq 0 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ] || [ "$1" == "-?" ]; then
    print_usage
    exit 0
fi


action=$1
menu=$2
dotool=$3


if [ -z "$WAYLAND_DISPLAY" ] && [ -z "$DISPLAY" ]; then
	echo "Error: No Wayland or X11 display detected" >&2
	exit 1
fi


shopt -s nullglob globstar

prefix=${PASSWORD_STORE_DIR-~/.password-store}
password_files=( "$prefix"/**/*.gpg )
password_files=( "${password_files[@]#"$prefix"/}" )
password_files=( "${password_files[@]%.gpg}" )


password=$(printf '%s\n' "${password_files[@]}" | $menu "$@")

[ -n "$password" ] || exit

pass "$action" "$password" | { IFS= read -r pass; printf %s "$pass"; } | $dotool
